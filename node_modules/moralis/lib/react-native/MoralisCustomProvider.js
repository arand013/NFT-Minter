var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _web = _interopRequireDefault(require("web3"));

var ERROR_CHAINID_MISSING = 'Invalid chainId: Chain not currently supported by Moralis';

var MORALIS_RPCS = function (speedyNodeKey) {
  return {
    1: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/eth/mainnet",
    3: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/eth/ropsten",
    4: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/eth/rinkeby",
    5: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/eth/goerli",
    42: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/eth/kovan",
    137: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/polygon/mainnet",
    80001: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/polygon/mumbai",
    56: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/bsc/mainnet",
    97: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/bsc/testnet",
    43114: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/avalanche/mainnet",
    43113: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/avalanche/testnet",
    250: "https://speedy-nodes-nyc.moralis.io/" + speedyNodeKey + "/fantom/mainnet"
  };
};

var MoralisCustomProvider = function () {
  function MoralisCustomProvider() {
    (0, _classCallCheck2.default)(this, MoralisCustomProvider);
  }

  (0, _createClass2.default)(MoralisCustomProvider, [{
    key: "type",
    get: function () {
      return 'CustomProvider';
    }
  }, {
    key: "activate",
    value: function (options) {
      var speedyNodeApiKey, chainId, MWeb3, web3Provider;
      return _regenerator.default.async(function (_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!options.chainId) {
                options.chainId = 1;
              }

              speedyNodeApiKey = options.speedyNodeApiKey, chainId = options.chainId;
              MWeb3 = typeof _web.default === 'function' ? _web.default : window.Web3;
              web3Provider = new MWeb3.providers.HttpProvider(this.getUrl(chainId, speedyNodeApiKey), options);
              this.web3 = new MWeb3(web3Provider);
              this.isActivated = true;
              return _context.abrupt("return", this.web3);

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, null, this, null, Promise);
    }
  }, {
    key: "deactivate",
    value: function () {
      return _regenerator.default.async(function (_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              this.isActivated = false;
              this.web3 = null;

            case 2:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this, null, Promise);
    }
  }, {
    key: "getUrl",
    value: function (chainId, speedyNodeKey) {
      var url = MORALIS_RPCS(speedyNodeKey)[chainId];

      if (!url) {
        throw new Error(ERROR_CHAINID_MISSING);
      }

      return url;
    }
  }]);
  return MoralisCustomProvider;
}();

var _default = MoralisCustomProvider;
exports.default = _default;